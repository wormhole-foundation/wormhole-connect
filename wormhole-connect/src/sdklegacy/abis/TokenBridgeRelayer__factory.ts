/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from './common';
import type {
  TokenBridgeRelayer,
  TokenBridgeRelayerInterface,
} from './TokenBridgeRelayer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'wormhole',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'tokenBridge_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wethAddress',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'unwrapWeth_',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransfered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'swapRate',
        type: 'uint256',
      },
    ],
    name: 'SwapRateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint16',
        name: 'emitterChainId',
        type: 'uint16',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'emitterAddress',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'sequence',
        type: 'uint64',
      },
    ],
    name: 'TransferRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'relayer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nativeAmount',
        type: 'uint256',
      },
    ],
    name: 'SwapExecuted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'WETH',
    outputs: [
      {
        internalType: 'contract IWETH',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'calculateMaxSwapAmountIn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'maxAllowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'toNativeAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateNativeSwapAmountOut',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nativeAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'targetChainId',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'decimals',
        type: 'uint8',
      },
    ],
    name: 'calculateRelayerFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeInTokenDenomination',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
    ],
    name: 'cancelOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedTransferMessage',
        type: 'bytes',
      },
    ],
    name: 'completeTransferWithRelay',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'confirmOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encoded',
        type: 'bytes',
      },
    ],
    name: 'decodeTransferWithRelay',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'payloadId',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'targetRelayerFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'toNativeTokenAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'targetRecipient',
            type: 'bytes32',
          },
        ],
        internalType: 'struct TokenBridgeRelayerStructs.TransferWithRelay',
        name: 'transfer',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'decimals',
        type: 'uint8',
      },
    ],
    name: 'denormalizeAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'deregisterToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'payloadId',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'targetRelayerFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'toNativeTokenAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'targetRecipient',
            type: 'bytes32',
          },
        ],
        internalType: 'struct TokenBridgeRelayerStructs.TransferWithRelay',
        name: 'transfer',
        type: 'tuple',
      },
    ],
    name: 'encodeTransferWithRelay',
    outputs: [
      {
        internalType: 'bytes',
        name: 'encoded',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'fetchLocalAddressFromTransferMessage',
    outputs: [
      {
        internalType: 'address',
        name: 'localAddress',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAcceptedTokensList',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'emitterChainId',
        type: 'uint16',
      },
    ],
    name: 'getRegisteredContract',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'isAcceptedToken',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'maxNativeSwapAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'nativeSwapRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'decimals',
        type: 'uint8',
      },
    ],
    name: 'normalizeAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'contractAddress',
        type: 'bytes32',
      },
    ],
    name: 'registerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'registerToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
    ],
    name: 'relayerFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'relayerFeePrecision',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'submitOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'swapRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swapRatePrecision',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenBridge',
    outputs: [
      {
        internalType: 'contract ITokenBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'toNativeTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint16',
        name: 'targetChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'targetRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint32',
        name: 'batchId',
        type: 'uint32',
      },
    ],
    name: 'transferTokensWithRelay',
    outputs: [
      {
        internalType: 'uint64',
        name: 'messageSequence',
        type: 'uint64',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unwrapWeth',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
    ],
    name: 'updateMaxNativeSwapAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'updateRelayerFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'relayerFeePrecision_',
        type: 'uint256',
      },
    ],
    name: 'updateRelayerFeePrecision',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'swapRate',
        type: 'uint256',
      },
    ],
    name: 'updateSwapRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'swapRatePrecision_',
        type: 'uint256',
      },
    ],
    name: 'updateSwapRatePrecision',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'bool',
        name: 'unwrapWeth_',
        type: 'bool',
      },
    ],
    name: 'updateUnwrapWethFlag',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormhole',
    outputs: [
      {
        internalType: 'contract IWormhole',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'toNativeTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint16',
        name: 'targetChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'targetRecipient',
        type: 'bytes32',
      },
      {
        internalType: 'uint32',
        name: 'batchId',
        type: 'uint32',
      },
    ],
    name: 'wrapAndTransferEthWithRelay',
    outputs: [
      {
        internalType: 'uint64',
        name: 'messageSequence',
        type: 'uint64',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200405538038062004055833981016040819052620000349162000260565b6001600d5561ffff8516620000825760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a590818da185a5b9259608a1b60448201526064015b60405180910390fd5b6001600160a01b038416620000da5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420776f726d686f6c6520616464726573730000000000000000604482015260640162000079565b6001600160a01b038316620001325760405162461bcd60e51b815260206004820152601c60248201527f696e76616c696420746f6b656e20627269646765206164647265737300000000604482015260640162000079565b6001600160a01b0382166200018a5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420776574682061646472657373000000000000000000000000604482015260640162000079565b600180546001600160a01b031916331790556000805461ffff191661ffff8716179055600380546001600160a01b0319166001600160a01b038616179055600480546001600160a01b0319166001600160a01b038516179055600080546301000000600160b81b03191663010000006001600160a01b038516021790556000805462ff0000191662010000831515021790556200022a6305f5e100600555565b620002386305f5e100600655565b5050505050620002e0565b80516001600160a01b03811681146200025b57600080fd5b919050565b600080600080600060a086880312156200027957600080fd5b855161ffff811681146200028c57600080fd5b94506200029c6020870162000243565b9350620002ac6040870162000243565b9250620002bc6060870162000243565b915060808601518015158114620002d257600080fd5b809150509295509295909350565b613d6580620002f06000396000f3fe6080604052600436106102345760003560e01c80637c9dec7a1161012e578063a2f32c8f116100ab578063cd601c781161006f578063cd601c781461071a578063df160d761461073a578063e30c39781461075c578063f23f82ef1461077a578063fff982a81461079a57600080fd5b8063a2f32c8f14610677578063ad5c464814610697578063b5419523146106bc578063c6328a46146106dc578063c9c22f9f146106fa57600080fd5b806390a1afaa116100f257806390a1afaa146105c957806394cc743d146105e95780639a8a0592146106095780639cf278cd1461062c5780639fe089ad1461064a57600080fd5b80637c9dec7a146104f75780638335572f1461054d57806384acd1bb1461056d5780638da5cb5b1461058b5780638e151dd1146105a957600080fd5b80632def3e16116101bc5780633d62cca0116101805780633d62cca014610440578063415828bf1461047157806351e2d7b5146104865780635b9cf0e1146104a657806366775a6b146104c657600080fd5b80632def3e16146103875780632efe4f42146103a75780632f25e25f146103dd57806339ba6611146103f05780633b6e750f1461041057600080fd5b806327105ab91161020357806327105ab9146102c657806328ded8e3146102e657806329ac8361146103065780632ca8008c146103195780632d77e8fe1461034f57600080fd5b8063016aa20514610240578063038c0b66146102625780631019d654146102775780631acdab4b146102a757600080fd5b3661023b57005b600080fd5b34801561024c57600080fd5b5061026061025b36600461313d565b6107ba565b005b34801561026e57600080fd5b50610260610884565b61028a610285366004613188565b610971565b6040516001600160401b0390911681526020015b60405180910390f35b3480156102b357600080fd5b506005545b60405190815260200161029e565b3480156102d257600080fd5b506102b86102e13660046131fe565b610ac3565b3480156102f257600080fd5b506102b86103013660046131fe565b610afd565b61028a610314366004613223565b610b2b565b34801561032557600080fd5b506102b861033436600461326d565b6001600160a01b031660009081526008602052604090205490565b34801561035b57600080fd5b5061036f61036a366004613365565b610d7b565b6040516001600160a01b03909116815260200161029e565b34801561039357600080fd5b506102606103a23660046133e4565b610e9b565b3480156103b357600080fd5b506102b86103c236600461326d565b6001600160a01b031660009081526009602052604090205490565b6102606103eb366004613410565b610f59565b3480156103fc57600080fd5b506102b861040b366004613481565b611210565b34801561041c57600080fd5b5061043061042b36600461326d565b6112c3565b604051901515815260200161029e565b34801561044c57600080fd5b506102b861045b3660046134cc565b61ffff1660009081526007602052604090205490565b34801561047d57600080fd5b506006546102b8565b34801561049257600080fd5b506102606104a13660046133e4565b6112e1565b3480156104b257600080fd5b506102606104c13660046133e4565b61140b565b3480156104d257600080fd5b506102b86104e13660046134cc565b61ffff166000908152600a602052604090205490565b34801561050357600080fd5b50610517610512366004613365565b611502565b60405161029e9190815160ff16815260208083015190820152604080830151908201526060918201519181019190915260800190565b34801561055957600080fd5b506102606105683660046134f7565b611633565b34801561057957600080fd5b506003546001600160a01b031661036f565b34801561059757600080fd5b506001546001600160a01b031661036f565b3480156105b557600080fd5b506102b86105c4366004613525565b6116ba565b3480156105d557600080fd5b506102606105e43660046133e4565b61179a565b3480156105f557600080fd5b5061026061060436600461313d565b611858565b34801561061557600080fd5b5060005460405161ffff909116815260200161029e565b34801561063857600080fd5b5060005462010000900460ff16610430565b34801561065657600080fd5b5061066a610665366004613543565b611924565b60405161029e9190613601565b34801561068357600080fd5b506102606106923660046134cc565b6119cf565b3480156106a357600080fd5b50600054630100000090046001600160a01b031661036f565b3480156106c857600080fd5b506102b86106d736600461326d565b611a46565b3480156106e857600080fd5b506004546001600160a01b031661036f565b34801561070657600080fd5b5061026061071536600461313d565b611ae0565b34801561072657600080fd5b506102b861073536600461326d565b611b9c565b34801561074657600080fd5b5061074f611c81565b60405161029e9190613614565b34801561076857600080fd5b506002546001600160a01b031661036f565b34801561078657600080fd5b50610260610795366004613661565b611ce6565b3480156107a657600080fd5b506102606107b5366004613661565b611e11565b336107cd6001546001600160a01b031690565b6001600160a01b0316146107fc5760405162461bcd60e51b81526004016107f3906136a2565b60405180910390fd5b818061ffff1661080f60005461ffff1690565b61ffff16146108305760405162461bcd60e51b81526004016107f3906136d0565b6001600160a01b0382166108765760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016107f3565b61087f82611ec5565b505050565b60006108986002546001600160a01b031690565b9050336001600160a01b038216146108f25760405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206d7573742062652070656e64696e674f776e6572000000000060448201526064016107f3565b60006109066001546001600160a01b031690565b600180546001600160a01b0319166001600160a01b038516179055905061092d600061206a565b816001600160a01b0316816001600160a01b03167f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6760405160405180910390a35050565b600061097b61208c565b600061098f6003546001600160a01b031690565b6001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f091906136f5565b9050803414610a365760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b60448201526064016107f3565b6000610a41896120e5565b9050610a56610a508983610ac3565b82610afd565b9750610a628989612187565b9750610aab6040518060c001604052808b6001600160a01b031681526020018360ff1681526020018a81526020018981526020018861ffff1681526020018781525085846121bd565b92505050610ab96001600d55565b9695505050505050565b600060088260ff161115610af457610adc600883613724565b610ae790600a613821565b610af19084613830565b92505b50815b92915050565b600060088260ff161115610af457610b16600883613724565b610b2190600a613821565b610af19084613852565b6000805462010000900460ff16610b845760405162461bcd60e51b815260206004820181905260248201527f574554482066756e6374696f6e616c697479206e6f7420737570706f7274656460448201526064016107f3565b6000610b986003546001600160a01b031690565b6001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf991906136f5565b9050803411610c3f5760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b60448201526064016107f3565b6000610c4b8234613869565b90506000610c64610c5d836012610ac3565b6012610afd565b610c6e9083613869565b90508015610ca557604051339082156108fc029083906000818181858888f19350505050158015610ca3573d6000803e3d6000fd5b505b6000610cb18284613869565b90506000610ccf6000546001600160a01b0363010000009091041690565b9050806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b5050505050610d6d6040518060c00160405280836001600160a01b03168152602001601260ff1681526020018481526020018c81526020018b61ffff1681526020018a81525088876121bd565b9a9950505050505050505050565b600080610d898360216124d7565b90506000610d98846041612535565b9050610da760005461ffff1690565b61ffff168161ffff1614610e88576004546001600160a01b0316604051630ff8f14360e11b815261ffff83166004820152602481018490526001600160a01b039190911690631ff1e28690604401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e36919061387c565b92506001600160a01b038316610e835760405162461bcd60e51b81526020600482015260126024820152711d1bdad95b881b9bdd08185d1d195cdd195960721b60448201526064016107f3565b610e94565b610e9182612592565b92505b5050919050565b33610eae6001546001600160a01b031690565b6001600160a01b031614610ed45760405162461bcd60e51b81526004016107f3906136a2565b818061ffff16610ee760005461ffff1690565b61ffff1614610f085760405162461bcd60e51b81526004016107f3906136d0565b60008211610f505760405162461bcd60e51b81526020600482015260156024820152740707265636973696f6e206d757374206265203e203605c1b60448201526064016107f3565b61087f82600555565b6000806000610f9d85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125e692505050565b9250925092506000610fae84611502565b90506000610fbf8260600151612592565b90506000610fd660005460ff620100009091041690565b90506001600160a01b0382163303610ffe57610ff4848387846128c2565b5050505050505050565b6000611009856120e5565b9050611019846020015182610afd565b6020850152600054630100000090046001600160a01b03166001600160a01b0316856001600160a01b0316036110645761105986848660200151856129ec565b505050505050505050565b6040840151156111c75761107c846040015182610afd565b604085015260008061108d87611b9c565b905080866040015111156110a357604086018190525b6110b18787604001516116ba565b9150811561118957813410156111095760405162461bcd60e51b815260206004820181905260248201527f696e73756666696369656e74206e617469766520617373657420616d6f756e7460448201526064016107f3565b60006111158334613869565b9050801561114c57604051339082156108fc029083906000818181858888f1935050505015801561114a573d6000803e3d6000fd5b505b6040516001600160a01b0387169084156108fc029085906000818181858888f19350505050158015611182573d6000803e3d6000fd5b50506111c4565b6000604087015234156111c45760405133903480156108fc02916000818181858888f193505050501580156111c2573d6000803e3d6000fd5b505b50505b6000846040015185602001516111dd9190613899565b905080156111f0576111f0863383612b44565b61120486856111ff848b613869565b612b44565b50505050505050505050565b6001600160a01b0382166000908152600860205260408120548060000361126d5760405162461bcd60e51b81526020600482015260116024820152701cddd85c081c985d19481b9bdd081cd95d607a1b60448201526064016107f3565b60065461127a9082613852565b60055461ffff87166000908152600a602052604090205461129c86600a613821565b6112a69190613852565b6112b09190613852565b6112ba9190613830565b95945050505050565b6001600160a01b03166000908152600b602052604090205460ff1690565b336112f46001546001600160a01b031690565b6001600160a01b03161461131a5760405162461bcd60e51b81526004016107f3906136a2565b806113775760405162461bcd60e51b815260206004820152602760248201527f636f6e7472616374416464726573732063616e6e6f7420657175616c206279746044820152666573333228302960c81b60648201526084016107f3565b61ffff821615801590611393575060005461ffff838116911614155b6113ef5760405162461bcd60e51b815260206004820152602760248201527f636861696e49645f2063616e6e6f7420657175616c2030206f7220746869732060448201526618da185a5b925960ca1b60648201526084016107f3565b61ffff91909116600090815260076020526040902055565b5050565b3361141e6001546001600160a01b031690565b6001600160a01b0316146114445760405162461bcd60e51b81526004016107f3906136a2565b60005461ffff1661ffff168261ffff16036114915760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21031b430b4b760991b60448201526064016107f3565b61ffff82166000908152600760205260409020546114ea5760405162461bcd60e51b815260206004820152601660248201527518dbdb9d1c9858dd08191bd95cdb89dd08195e1a5cdd60521b60448201526064016107f3565b61ffff919091166000908152600a6020526040902055565b6040805160808101825260008082526020820181905291810182905260608101829052906115308382612ba7565b60ff168252611540600182613899565b9050816000015160ff1660011461158d5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591259607a1b60448201526064016107f3565b6115978382612c03565b6020808401919091526115aa9082613899565b90506115b68382612c03565b60408301526115c6602082613899565b90506115d283826124d7565b60608301526115e2602082613899565b90508251811461162d5760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b60448201526064016107f3565b50919050565b336116466001546001600160a01b031690565b6001600160a01b03161461166c5760405162461bcd60e51b81526004016107f3906136a2565b818061ffff1661167f60005461ffff1690565b61ffff16146116a05760405162461bcd60e51b81526004016107f3906136d0565b6000805462ff000019166201000084151502179055505050565b6000806116c6846120e5565b905060006116ec6116e76000546001600160a01b0363010000009091041690565b6120e5565b90508060ff168260ff161115611749576117068183613724565b61171190600a613821565b61171a86611a46565b6117249190613852565b8461172e60055490565b6117389190613852565b6117429190613830565b9250611792565b61175285611a46565b61175c8383613724565b61176790600a613821565b8561177160055490565b61177b9190613852565b6117859190613852565b61178f9190613830565b92505b505092915050565b336117ad6001546001600160a01b031690565b6001600160a01b0316146117d35760405162461bcd60e51b81526004016107f3906136a2565b818061ffff166117e660005461ffff1690565b61ffff16146118075760405162461bcd60e51b81526004016107f3906136d0565b6000821161184f5760405162461bcd60e51b81526020600482015260156024820152740707265636973696f6e206d757374206265203e203605c1b60448201526064016107f3565b61087f82600655565b3361186b6001546001600160a01b031690565b6001600160a01b0316146118915760405162461bcd60e51b81526004016107f3906136a2565b818061ffff166118a460005461ffff1690565b61ffff16146118c55760405162461bcd60e51b81526004016107f3906136d0565b6001600160a01b03821661191b5760405162461bcd60e51b815260206004820181905260248201527f6e65774f776e65722063616e6e6f7420657175616c206164647265737328302960448201526064016107f3565b61087f8261206a565b6060816000015160ff166001146119715760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591259607a1b60448201526064016107f3565b8151602080840151604080860151606087015191516119b995949192910160f89490941b6001600160f81b031916845260018401929092526021830152604182015260610190565b6040516020818303038152906040529050919050565b336119e26001546001600160a01b031690565b6001600160a01b031614611a085760405162461bcd60e51b81526004016107f3906136a2565b808061ffff16611a1b60005461ffff1690565b61ffff1614611a3c5760405162461bcd60e51b81526004016107f3906136d0565b611407600061206a565b600080546001600160a01b0363010000009091048116825260086020526040808320549184168352822054600082118015611a815750600081115b611ac15760405162461bcd60e51b81526020600482015260116024820152701cddd85c081c985d19481b9bdd081cd95d607a1b60448201526064016107f3565b8082611acc60055490565b611ad69190613852565b610e919190613830565b33611af36001546001600160a01b031690565b6001600160a01b031614611b195760405162461bcd60e51b81526004016107f3906136a2565b818061ffff16611b2c60005461ffff1690565b61ffff1614611b4d5760405162461bcd60e51b81526004016107f3906136d0565b6001600160a01b038216611b935760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016107f3565b61087f82612c58565b600080611ba8836120e5565b90506000611bc96116e76000546001600160a01b0363010000009091041690565b90508060ff168260ff161115611c3857600554611be68284613724565b611bf190600a613821565b611bfa86611a46565b6001600160a01b038716600090815260096020526040902054611c1d9190613852565b611c279190613852565b611c319190613830565b9250610e94565b600554611c458383613724565b611c5090600a613821565b611c5a9190613852565b611c6385611a46565b6001600160a01b038616600090815260096020526040902054611acc565b60606000600c01805480602002602001604051908101604052809291908181526020018280548015611cdc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611cbe575b5050505050905090565b33611cf96001546001600160a01b031690565b6001600160a01b031614611d1f5760405162461bcd60e51b81526004016107f3906136a2565b828061ffff16611d3260005461ffff1690565b61ffff1614611d535760405162461bcd60e51b81526004016107f3906136d0565b611d5c836112c3565b611d785760405162461bcd60e51b81526004016107f3906138ac565b60008211611dc85760405162461bcd60e51b815260206004820152601960248201527f737761702072617465206d757374206265206e6f6e7a65726f0000000000000060448201526064016107f3565b6001600160a01b038316600081815260086020526040808220859055518492917fc6eb9fb936b61b402d503deeffc822f46492e15c2c8f079815cc4850ad7b02b091a350505050565b33611e246001546001600160a01b031690565b6001600160a01b031614611e4a5760405162461bcd60e51b81526004016107f3906136a2565b828061ffff16611e5d60005461ffff1690565b61ffff1614611e7e5760405162461bcd60e51b81526004016107f3906136d0565b611e87836112c3565b611ea35760405162461bcd60e51b81526004016107f3906138ac565b6001600160a01b03831660009081526009602052604090208290555b50505050565b6001600160a01b0381166000908152600b602052604090205460ff16611f245760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881b9bdd081c9959da5cdd195c995960621b60448201526064016107f3565b6001600160a01b0381166000908152600b60209081526040808320805460ff191690556008825280832083905560099091528120819055600c54905b81811015611faa57826001600160a01b03166000600c018281548110611f8857611f886138d8565b6000918252602090912001546001600160a01b031614611faa57600101611f60565b81811461087f57600182111561203257600c611fc7600184613869565b81548110611fd757611fd76138d8565b600091825260209091200154600c80546001600160a01b039092169183908110612003576120036138d8565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b600c805480612043576120436138ee565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002600d54036120de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107f3565b6002600d55565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b0385169161212891613904565b600060405180830381855afa9150503d8060008114612163576040519150601f19603f3d011682016040523d82523d6000602084013e612168565b606091505b50915050808060200190518101906121809190613930565b9392505050565b60008061219384612d27565b90506121a184333086612dd3565b806121ab85612d27565b6121b59190613869565b949350505050565b60006121cc84600001516112c3565b6121e85760405162461bcd60e51b81526004016107f3906138ac565b60a08401516122455760405162461bcd60e51b8152602060048201526024808201527f746172676574526563697069656e742063616e6e6f74206265206279746573336044820152633228302960e01b60648201526084016107f3565b600061225985604001518660200151610ac3565b9050600081116122ab5760405162461bcd60e51b815260206004820152601d60248201527f6e6f726d616c697a656420616d6f756e74206d757374206265203e203000000060448201526064016107f3565b60006122bf86606001518760200151610ac3565b90508560600151600014806122d45750600081115b6123205760405162461bcd60e51b815260206004820152601b60248201527f696e76616c696420746f4e6174697665546f6b656e416d6f756e74000000000060448201526064016107f3565b608086015161ffff166000908152600760205260409020548061237d5760405162461bcd60e51b81526020600482015260156024820152741d185c99d95d081b9bdd081c9959da5cdd195c9959605a1b60448201526064016107f3565b60006123a361239989608001518a600001518b60200151611210565b8960200151610ac3565b90506123af8382613899565b84116123f35760405162461bcd60e51b81526020600482015260136024820152721a5b9cdd59999a58da595b9d08185b5bdd5b9d606a1b60448201526064016107f3565b60006124266040518060800160405280600160ff1681526020018481526020018681526020018b60a00151815250611924565b9050600061243c6004546001600160a01b031690565b90506124518a60000151828c60400151612e0b565b806001600160a01b031663c5a5ebda898c600001518d604001518e60800151898f896040518863ffffffff1660e01b81526004016124949695949392919061394d565b60206040518083038185885af11580156124b2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d6d91906139b3565b60006124e4826020613899565b8351101561252c5760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b60448201526064016107f3565b50016020015190565b6000612542826002613899565b835110156125895760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b60448201526064016107f3565b50016002015190565b60006001600160a01b03198216156125e25760405162461bcd60e51b8152602060048201526013602482015272696e76616c69642045564d206164647265737360681b60448201526064016107f3565b5090565b606060008060006125ff6003546001600160a01b031690565b6001600160a01b031663a9e11893866040518263ffffffff1660e01b815260040161262a9190613601565b600060405180830381865afa158015612647573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261266f9190810190613af2565b905060006126808260e00151610d7b565b905061268b816112c3565b6126ce5760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881b9bdd081c9959da5cdd195c995960621b60448201526064016107f3565b60006126d982612d27565b905060006126ef6004546001600160a01b031690565b90506000816001600160a01b031663c3f511c18a6040518263ffffffff1660e01b815260040161271f9190613601565b6000604051808303816000875af115801561273e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127669190810190613c16565b905060008361277486612d27565b61277e9190613869565b90506000836001600160a01b031663ea63738d846040518263ffffffff1660e01b81526004016127ae9190613601565b600060405180830381865afa1580156127cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127f39190810190613c4a565b9050612813876060015161ffff1660009081526007602052604090205490565b8160c00151146128655760405162461bcd60e51b815260206004820152601760248201527f636f6e7472616374206e6f74207265676973746572656400000000000000000060448201526064016107f3565b8660a001516001600160401b03168760800151886060015161ffff167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c16960405160405180910390a460e001519a9099509397509295505050505050565b341561291c5760405162461bcd60e51b815260206004820152602360248201527f726563697069656e742063616e6e6f742073776170206e61746976652061737360448201526265747360e81b60648201526084016107f3565b6000546001600160a01b03630100000090910481169085168114801561293f5750815b156129da57604051632e1a7d4d60e01b8152600481018490526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b15801561298657600080fd5b505af115801561299a573d6000803e3d6000fd5b50506040516001600160a01b038716925085156108fc02915085906000818181858888f193505050501580156129d4573d6000803e3d6000fd5b506129e5565b6129e5858585612b44565b5050505050565b3415612a2f5760405162461bcd60e51b815260206004820152601260248201527176616c7565206d757374206265207a65726f60701b60448201526064016107f3565b8015612b1557600054604051632e1a7d4d60e01b81526004810186905263010000009091046001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015612a8157600080fd5b505af1158015612a95573d6000803e3d6000fd5b50505050826001600160a01b03166108fc8386612ab29190613869565b6040518115909202916000818181858888f19350505050158015612ada573d6000803e3d6000fd5b508115612b1057604051339083156108fc029084906000818181858888f19350505050158015612b0e573d6000803e3d6000fd5b505b611ebf565b600054630100000090046001600160a01b0316612b3781856111ff8689613869565b82156129e5576129e58133855b6040516001600160a01b03831660248201526044810182905261087f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612f20565b6000612bb4826001613899565b83511015612bfa5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b60448201526064016107f3565b50016001015190565b6000612c10826020613899565b8351101561252c5760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b60448201526064016107f3565b6001600160a01b0381166000908152600b602052604090205460ff1615612cc15760405162461bcd60e51b815260206004820152601860248201527f746f6b656e20616c72656164792072656769737465726564000000000000000060448201526064016107f3565b6001600160a01b03166000818152600b60205260408120805460ff19166001908117909155600c805491820181559091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319169091179055565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b179052905160009182916001600160a01b03851691612d7b91613904565b600060405180830381855afa9150503d8060008114612db6576040519150601f19603f3d011682016040523d82523d6000602084013e612dbb565b606091505b509150508080602001905181019061218091906136f5565b6040516001600160a01b0380851660248301528316604482015260648101829052611ebf9085906323b872dd60e01b90608401612b70565b801580612e855750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8391906136f5565b155b612ef05760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016107f3565b6040516001600160a01b03831660248201526044810182905261087f90849063095ea7b360e01b90606401612b70565b6000612f75826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ff29092919063ffffffff16565b80519091501561087f5780806020019051810190612f939190613d12565b61087f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107f3565b60606121b5848460008585600080866001600160a01b031685876040516130199190613904565b60006040518083038185875af1925050503d8060008114613056576040519150601f19603f3d011682016040523d82523d6000602084013e61305b565b606091505b509150915061306c87838387613077565b979650505050505050565b606083156130e65782516000036130df576001600160a01b0385163b6130df5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107f3565b50816121b5565b6121b583838151156130fb5781518083602001fd5b8060405162461bcd60e51b81526004016107f39190613601565b61ffff8116811461312557600080fd5b50565b6001600160a01b038116811461312557600080fd5b6000806040838503121561315057600080fd5b823561315b81613115565b9150602083013561316b81613128565b809150509250929050565b63ffffffff8116811461312557600080fd5b60008060008060008060c087890312156131a157600080fd5b86356131ac81613128565b9550602087013594506040870135935060608701356131ca81613115565b92506080870135915060a08701356131e181613176565b809150509295509295509295565b60ff8116811461312557600080fd5b6000806040838503121561321157600080fd5b82359150602083013561316b816131ef565b6000806000806080858703121561323957600080fd5b84359350602085013561324b81613115565b925060408501359150606085013561326281613176565b939692955090935050565b60006020828403121561327f57600080fd5b813561218081613128565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156132c2576132c261328a565b60405290565b60405161016081016001600160401b03811182821017156132c2576132c261328a565b60405161010081016001600160401b03811182821017156132c2576132c261328a565b604051601f8201601f191681016001600160401b03811182821017156133365761333661328a565b604052919050565b60006001600160401b038211156133575761335761328a565b50601f01601f191660200190565b60006020828403121561337757600080fd5b81356001600160401b0381111561338d57600080fd5b8201601f8101841361339e57600080fd5b80356133b16133ac8261333e565b61330e565b8181528560208385010111156133c657600080fd5b81602084016020830137600091810160200191909152949350505050565b600080604083850312156133f757600080fd5b823561340281613115565b946020939093013593505050565b6000806020838503121561342357600080fd5b82356001600160401b038082111561343a57600080fd5b818501915085601f83011261344e57600080fd5b81358181111561345d57600080fd5b86602082850101111561346f57600080fd5b60209290920196919550909350505050565b60008060006060848603121561349657600080fd5b83356134a181613115565b925060208401356134b181613128565b915060408401356134c1816131ef565b809150509250925092565b6000602082840312156134de57600080fd5b813561218081613115565b801515811461312557600080fd5b6000806040838503121561350a57600080fd5b823561351581613115565b9150602083013561316b816134e9565b6000806040838503121561353857600080fd5b823561340281613128565b60006080828403121561355557600080fd5b604051608081018181106001600160401b03821117156135775761357761328a565b6040528235613585816131ef565b808252506020830135602082015260408301356040820152606083013560608201528091505092915050565b60005b838110156135cc5781810151838201526020016135b4565b50506000910152565b600081518084526135ed8160208601602086016135b1565b601f01601f19169290920160200192915050565b60208152600061218060208301846135d5565b6020808252825182820181905260009190848201906040850190845b818110156136555783516001600160a01b031683529284019291840191600101613630565b50909695505050505050565b60008060006060848603121561367657600080fd5b833561368181613115565b9250602084013561369181613128565b929592945050506040919091013590565b60208082526014908201527331b0b63632b9103737ba103a34329037bbb732b960611b604082015260600190565b6020808252600b908201526a3bb937b7339031b430b4b760a91b604082015260600190565b60006020828403121561370757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610af757610af761370e565b600181815b8085111561377857816000190482111561375e5761375e61370e565b8085161561376b57918102915b93841c9390800290613742565b509250929050565b60008261378f57506001610af7565b8161379c57506000610af7565b81600181146137b257600281146137bc576137d8565b6001915050610af7565b60ff8411156137cd576137cd61370e565b50506001821b610af7565b5060208310610133831016604e8410600b84101617156137fb575081810a610af7565b613805838361373d565b80600019048211156138195761381961370e565b029392505050565b600061218060ff841683613780565b60008261384d57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610af757610af761370e565b81810381811115610af757610af761370e565b60006020828403121561388e57600080fd5b815161218081613128565b80820180821115610af757610af761370e565b6020808252601290820152711d1bdad95b881b9bdd081858d8d95c1d195960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600082516139168184602087016135b1565b9190910192915050565b805161392b816131ef565b919050565b60006020828403121561394257600080fd5b8151612180816131ef565b60018060a01b038716815285602082015261ffff8516604082015283606082015263ffffffff8316608082015260c060a0820152600061399060c08301846135d5565b98975050505050505050565b80516001600160401b038116811461392b57600080fd5b6000602082840312156139c557600080fd5b6121808261399c565b805161392b81613176565b805161392b81613115565b600082601f8301126139f557600080fd5b8151613a036133ac8261333e565b818152846020838601011115613a1857600080fd5b6121b58260208301602087016135b1565b600082601f830112613a3a57600080fd5b815160206001600160401b03821115613a5557613a5561328a565b613a63818360051b0161330e565b82815260079290921b84018101918181019086841115613a8257600080fd5b8286015b84811015613ae75760808189031215613a9f5760008081fd5b613aa76132a0565b815181528482015185820152604080830151613ac2816131ef565b90820152606082810151613ad5816131ef565b90820152835291830191608001613a86565b509695505050505050565b600060208284031215613b0457600080fd5b81516001600160401b0380821115613b1b57600080fd5b908301906101608286031215613b3057600080fd5b613b386132c8565b613b4183613920565b8152613b4f602084016139ce565b6020820152613b60604084016139ce565b6040820152613b71606084016139d9565b606082015260808301516080820152613b8c60a0840161399c565b60a0820152613b9d60c08401613920565b60c082015260e083015182811115613bb457600080fd5b613bc0878286016139e4565b60e083015250610100613bd48185016139ce565b908201526101208381015183811115613bec57600080fd5b613bf888828701613a29565b91830191909152506101409283015192810192909252509392505050565b600060208284031215613c2857600080fd5b81516001600160401b03811115613c3e57600080fd5b6121b5848285016139e4565b600060208284031215613c5c57600080fd5b81516001600160401b0380821115613c7357600080fd5b908301906101008286031215613c8857600080fd5b613c906132eb565b613c9983613920565b81526020830151602082015260408301516040820152613cbb606084016139d9565b606082015260808301516080820152613cd660a084016139d9565b60a082015260c083015160c082015260e083015182811115613cf757600080fd5b613d03878286016139e4565b60e08301525095945050505050565b600060208284031215613d2457600080fd5b8151612180816134e956fea26469706673582212209cd7aa4e5402ef26381db379010320443521d1fc3a9c4d8d8892f083982ed25164736f6c63430008110033';

type TokenBridgeRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBridgeRelayerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBridgeRelayer__factory extends ContractFactory {
  constructor(...args: TokenBridgeRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chainId: PromiseOrValue<BigNumberish>,
    wormhole: PromiseOrValue<string>,
    tokenBridge_: PromiseOrValue<string>,
    wethAddress: PromiseOrValue<string>,
    unwrapWeth_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<TokenBridgeRelayer> {
    return super.deploy(
      chainId,
      wormhole,
      tokenBridge_,
      wethAddress,
      unwrapWeth_,
      overrides || {},
    ) as Promise<TokenBridgeRelayer>;
  }
  override getDeployTransaction(
    chainId: PromiseOrValue<BigNumberish>,
    wormhole: PromiseOrValue<string>,
    tokenBridge_: PromiseOrValue<string>,
    wethAddress: PromiseOrValue<string>,
    unwrapWeth_: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainId,
      wormhole,
      tokenBridge_,
      wethAddress,
      unwrapWeth_,
      overrides || {},
    );
  }
  override attach(address: string): TokenBridgeRelayer {
    return super.attach(address) as TokenBridgeRelayer;
  }
  override connect(signer: Signer): TokenBridgeRelayer__factory {
    return super.connect(signer) as TokenBridgeRelayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBridgeRelayerInterface {
    return new utils.Interface(_abi) as TokenBridgeRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): TokenBridgeRelayer {
    return new Contract(address, _abi, signerOrProvider) as TokenBridgeRelayer;
  }
}
