/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from './common';
import type {
  CircleIntegration,
  CircleIntegrationInterface,
} from './CircleIntegration';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldContract',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newContract',
        type: 'address',
      },
    ],
    name: 'ContractUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint16',
        name: 'emitterChainId',
        type: 'uint16',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'emitterAddress',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'sequence',
        type: 'uint64',
      },
    ],
    name: 'Redeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint8',
        name: 'oldFinality',
        type: 'uint8',
      },
      {
        indexed: true,
        internalType: 'uint8',
        name: 'newFinality',
        type: 'uint8',
      },
    ],
    name: 'WormholeFinalityUpdated',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'address_',
        type: 'address',
      },
    ],
    name: 'addressToBytes32',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'circleBridge',
    outputs: [
      {
        internalType: 'contract ICircleBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'circleTokenMinter',
    outputs: [
      {
        internalType: 'contract ITokenMinter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'circleTransmitter',
    outputs: [
      {
        internalType: 'contract IMessageTransmitter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encoded',
        type: 'bytes',
      },
    ],
    name: 'decodeDepositWithPayload',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'token',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'sourceDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'targetDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            internalType: 'bytes32',
            name: 'fromAddress',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'mintRecipient',
            type: 'bytes32',
          },
          {
            internalType: 'bytes',
            name: 'payload',
            type: 'bytes',
          },
        ],
        internalType: 'struct CircleIntegrationStructs.DepositWithPayload',
        name: 'message',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'token',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'sourceDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'targetDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            internalType: 'bytes32',
            name: 'fromAddress',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'mintRecipient',
            type: 'bytes32',
          },
          {
            internalType: 'bytes',
            name: 'payload',
            type: 'bytes',
          },
        ],
        internalType: 'struct CircleIntegrationStructs.DepositWithPayload',
        name: 'message',
        type: 'tuple',
      },
    ],
    name: 'encodeDepositWithPayload',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'evmChain',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'sourceDomain',
        type: 'uint32',
      },
      {
        internalType: 'bytes32',
        name: 'sourceToken',
        type: 'bytes32',
      },
    ],
    name: 'fetchLocalTokenAddress',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'domain',
        type: 'uint32',
      },
    ],
    name: 'getChainIdFromDomain',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
    ],
    name: 'getDomainFromChainId',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'emitterChainId',
        type: 'uint16',
      },
    ],
    name: 'getRegisteredEmitter',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governanceChainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governanceContract',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'isAcceptedToken',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'impl',
        type: 'address',
      },
    ],
    name: 'isInitialized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'isMessageConsumed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'localDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'encodedWormholeMessage',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'circleBridgeMessage',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'circleAttestation',
            type: 'bytes',
          },
        ],
        internalType: 'struct CircleIntegrationStructs.RedeemParameters',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'redeemTokensWithPayload',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'token',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint32',
            name: 'sourceDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint32',
            name: 'targetDomain',
            type: 'uint32',
          },
          {
            internalType: 'uint64',
            name: 'nonce',
            type: 'uint64',
          },
          {
            internalType: 'bytes32',
            name: 'fromAddress',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'mintRecipient',
            type: 'bytes32',
          },
          {
            internalType: 'bytes',
            name: 'payload',
            type: 'bytes',
          },
        ],
        internalType: 'struct CircleIntegrationStructs.DepositWithPayload',
        name: 'depositInfo',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedMessage',
        type: 'bytes',
      },
    ],
    name: 'registerEmitterAndDomain',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint16',
            name: 'targetChain',
            type: 'uint16',
          },
          {
            internalType: 'bytes32',
            name: 'mintRecipient',
            type: 'bytes32',
          },
        ],
        internalType: 'struct CircleIntegrationStructs.TransferParameters',
        name: 'transferParams',
        type: 'tuple',
      },
      {
        internalType: 'uint32',
        name: 'batchId',
        type: 'uint32',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'transferTokensWithPayload',
    outputs: [
      {
        internalType: 'uint64',
        name: 'messageSequence',
        type: 'uint64',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedMessage',
        type: 'bytes',
      },
    ],
    name: 'updateWormholeFinality',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedMessage',
        type: 'bytes',
      },
    ],
    name: 'upgradeContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encodedMessage',
        type: 'bytes',
      },
      {
        internalType: 'uint8',
        name: 'action',
        type: 'uint8',
      },
    ],
    name: 'verifyGovernanceMessage',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'messageHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormhole',
    outputs: [
      {
        internalType: 'contract IWormhole',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormholeFinality',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506001603d55613298806100256000396000f3fe6080604052600436106101815760003560e01c80638cf67ba9116100d1578063b04dad521161008a578063d60b347f11610064578063d60b347f1461052c578063e8219ea714610565578063f10b29fc1461057a578063fbe3c2cd1461059857600080fd5b8063b04dad52146104c9578063b172b222146104f7578063b83518321461050c57600080fd5b80638cf67ba9146103d95780638d3638f414610423578063943a646e146104455780639a8a0592146104655780639e68b1291461047e578063a2a1f04c1461049e57600080fd5b80633b6e750f1161013e5780636e7d969d116101185780636e7d969d1461034b578063783ae1411461036d57806382c947b71461038d57806384acd1bb146103b457600080fd5b80633b6e750f146102be578063470feb87146102ee57806357bf927b1461031e57600080fd5b806301a67b6b146101865780630520557b146101bd57806307133933146101e8578063134f89bd1461020657806319a8e2e81461025257806324816abb1461027f575b600080fd5b34801561019257600080fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101c957600080fd5b5060005462010000900460ff1660405160ff90911681526020016101b4565b3480156101f457600080fd5b506004546001600160a01b03166101a0565b34801561021257600080fd5b5061023d6102213660046127ca565b61ffff1660009081526007602052604090205463ffffffff1690565b60405163ffffffff90911681526020016101b4565b34801561025e57600080fd5b5061027261026d36600461295a565b6105b8565b6040516101b49190612a72565b34801561028b57600080fd5b506102b061029a3660046127ca565b61ffff1660009081526006602052604090205490565b6040519081526020016101b4565b3480156102ca57600080fd5b506102de6102d9366004612a9a565b610611565b60405190151581526020016101b4565b3480156102fa57600080fd5b506102de610309366004612ab7565b60009081526009602052604090205460ff1690565b34801561032a57600080fd5b5061033e610339366004612ad0565b610699565b6040516101b49190612b0a565b34801561035757600080fd5b5061036b610366366004612b8c565b61099d565b005b34801561037957600080fd5b5061036b610388366004612b8c565b610aaf565b34801561039957600080fd5b506102b06103a8366004612a9a565b6001600160a01b031690565b3480156103c057600080fd5b50600054600160381b90046001600160a01b03166101a0565b3480156103e557600080fd5b506104106103f4366004612bc0565b63ffffffff1660009081526008602052604090205461ffff1690565b60405161ffff90911681526020016101b4565b34801561042f57600080fd5b506000546301000000900463ffffffff1661023d565b34801561045157600080fd5b5061036b610460366004612b8c565b610d9c565b34801561047157600080fd5b5060005461ffff16610410565b34801561048a57600080fd5b506102b0610499366004612bdd565b610ff1565b6104b16104ac366004612c09565b6110bf565b6040516001600160401b0390911681526020016101b4565b3480156104d557600080fd5b506104e96104e4366004612cba565b61133d565b6040516101b4929190612d0b565b34801561050357600080fd5b506001546102b0565b34801561051857600080fd5b5061033e610527366004612b8c565b61165c565b34801561053857600080fd5b506102de610547366004612a9a565b6001600160a01b031660009081526005602052604090205460ff1690565b34801561057157600080fd5b50600a546102b0565b34801561058657600080fd5b506003546001600160a01b03166101a0565b3480156105a457600080fd5b50600054600160d81b900461ffff16610410565b8051602080830151604080850151606086810151608088015160a089015160c08a015160e08b015180519751959a6105fb9a60019a919991989791929101612d40565b6040516020818303038152906040529050919050565b6000806106266004546001600160a01b031690565b6040516352b7631960e11b81526001600160a01b038581166004830152919091169063a56ec63290602401602060405180830381865afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190612dc7565b1192915050565b6106a1612771565b60006106ea6106b08480612de0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061182792505050565b90506106f98160e0015161165c565b915061070d82604001518360000151610ff1565b8083526107615760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964206c6f63616c20746f6b656e2061646472657373000000000060448201526064015b60405180910390fd5b60c082015133146107b45760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206d757374206265206d696e74526563697069656e74000000006044820152606401610758565b61080c6107c46020850185612de0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050604084015160608501516080860151611a59565b61084f5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b21036b2b9b9b0b3b2903830b4b960611b6044820152606401610758565b60006108636003546001600160a01b031690565b6001600160a01b03166357ecfd2861087e6020870187612de0565b61088b6040890189612de0565b6040518563ffffffff1660e01b81526004016108aa9493929190612e56565b6020604051808303816000875af11580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190612e8d565b90508061094e5760405162461bcd60e51b815260206004820152602960248201527f434952434c455f494e544547524154494f4e3a206661696c656420746f206d696044820152686e7420746f6b656e7360b81b6064820152608401610758565b8160a001516001600160401b03168260800151836060015161ffff167ff02867db6908ee5f81fd178573ae9385837f0a0a72553f8c08306759a7e0f00e60405160405180910390a45050919050565b60006109aa826001611ad6565b905060248151146109cd5760405162461bcd60e51b815260040161075890612ea8565b60005462010000810460ff169061ffff166109e9836021611b10565b61ffff1614610a0a5760405162461bcd60e51b815260040161075890612ee9565b6000610a17836023611b6d565b905060008160ff1611610a5f5760405162461bcd60e51b815260206004820152601060248201526f696e76616c69642066696e616c69747960801b6044820152606401610758565b6000805462ff000019166201000060ff8416021790558060ff168260ff167f0f76cb696a4940fef5ce2eb3690c1f2af5c481c123bce2a123da2e5b92a014a860405160405180910390a350505050565b6000610abc826003611ad6565b90506043815114610adf5760405162461bcd60e51b815260040161075890612ea8565b60005461ffff16610af1826021611b10565b61ffff1614610b125760405162461bcd60e51b815260040161075890612ee9565b6000610b457f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506000610b54836023611bc9565b60408051600481526024810182526020810180516001600160e01b031663a55315b560e01b17905290519192506000916001600160a01b03841691610b9891612f17565b600060405180830381855afa9150503d8060008114610bd3576040519150601f19603f3d011682016040523d82523d6000602084013e610bd8565b606091505b509150508051602014610c265760405162461bcd60e51b815260206004820152601660248201527534b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606401610758565b7fa55315b5310bf674eccfe6b1537c17f7ef4a55b90365ed70e8fbff08e4f1c35e81806020019051810190610c5b9190612dc7565b14610ca15760405162461bcd60e51b815260206004820152601660248201527534b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606401610758565b50610cab81611c42565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b03851691610cee91612f17565b600060405180830381855af49150503d8060008114610d29576040519150601f19603f3d011682016040523d82523d6000602084013e610d2e565b606091505b5091509150818190610d535760405162461bcd60e51b81526004016107589190612a72565b50826001600160a01b0316846001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a3505050505050565b6000610da9826002611ad6565b90506049815114610dcc5760405162461bcd60e51b815260040161075890612ea8565b60005461ffff16610dde826021611b10565b61ffff1614610dff5760405162461bcd60e51b815260040161075890612ee9565b6000610e0c826023611b10565b905060008161ffff16118015610e2b575060005461ffff828116911614155b610e675760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21031b430b4b760991b6044820152606401610758565b61ffff811660009081526006602052604081205414610ec85760405162461bcd60e51b815260206004820152601860248201527f636861696e20616c7265616479207265676973746572656400000000000000006044820152606401610758565b6000610ed5836025611c82565b905080610f245760405162461bcd60e51b815260206004820152601e60248201527f656d69747465722063616e6e6f74206265207a65726f206164647265737300006044820152606401610758565b6000610f31846045611ce0565b6000549091506301000000900463ffffffff1663ffffffff168163ffffffff1603610f9e5760405162461bcd60e51b815260206004820152601760248201527f646f6d61696e203d3d206c6f63616c446f6d61696e28290000000000000000006044820152606401610758565b61ffff9290921660008181526006602090815260408083209490945560078152838220805463ffffffff191663ffffffff909616958617905593815260089093529120805461ffff191690911790555050565b60006110b66110086004546001600160a01b031690565b6001600160a01b031663eed3b9da858560405160200161104192919060e09290921b6001600160e01b0319168252600482015260240190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161107591815260200190565b602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190612f33565b90505b92915050565b60006002603d54036111135760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610758565b6002603d5560008054600160381b90046001600160a01b031690506000816001600160a01b0316631a90a2196040518163ffffffff1660e01b8152600401602060405180830381865afa15801561116e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111929190612dc7565b90508034146111d85760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742076616c756560701b6044820152606401610758565b6000806111f7886000015189602001518a604001518b60600151611d3d565b9150915060006112a36040518061010001604052806112208c600001516001600160a01b031690565b815260200184815260200161124260005463ffffffff63010000009091041690565b63ffffffff1681526020016112718c6040015161ffff1660009081526007602052604090205463ffffffff1690565b63ffffffff1681526001600160401b038616602082015260400133815260608c015160208201526040018990526105b8565b9050846001600160a01b031663b19a437e858a846112ca60005460ff620100009091041690565b6040518563ffffffff1660e01b81526004016112e893929190612f50565b60206040518083038185885af1158015611306573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061132b9190612f8d565b6001603d559998505050505050505050565b600060604661134b600a5490565b1461138c5760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21032bb369031b430b4b760791b6044820152606401610758565b60008060006113ab6000546001600160a01b03600160381b9091041690565b6001600160a01b031663c0fd8bde886040518263ffffffff1660e01b81526004016113d69190612a72565b600060405180830381865afa1580156113f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261141b91908101906130d9565b9250925092508181906114415760405162461bcd60e51b81526004016107589190612a72565b50600054600160d81b900461ffff1661ffff16836060015161ffff16146114aa5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420676f7665726e616e636520636861696e00000000000000006044820152606401610758565b6001548360800151146114ff5760405162461bcd60e51b815260206004820152601b60248201527f696e76616c696420676f7665726e616e636520636f6e747261637400000000006044820152606401610758565b61014083015160009081526009602052604090205460ff161561156f5760405162461bcd60e51b815260206004820152602260248201527f676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d604482015261195960f21b6064820152608401610758565b60e083015170436972636c65496e746567726174696f6e90611592906000611c82565b146115df5760405162461bcd60e51b815260206004820152601960248201527f696e76616c696420676f7665726e616e6365206d6f64756c65000000000000006044820152606401610758565b60e083015160ff8716906115f4906020611b6d565b60ff16146116445760405162461bcd60e51b815260206004820152601960248201527f696e76616c696420676f7665726e616e636520616374696f6e000000000000006044820152606401610758565b505060e0810151610140909101519590945092505050565b611664612771565b61166f826000611b6d565b60ff166001146116c15760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206d657373616765207061796c6f61644964000000000000006044820152606401610758565b60016116cd8382611c82565b82526116da60208261323c565b90506116e68382611f85565b6020808401919091526116f9908261323c565b90506117058382611ce0565b63ffffffff16604083015261171b60048261323c565b90506117278382611ce0565b63ffffffff16606083015261173d60048261323c565b90506117498382611fda565b6001600160401b0316608083015261176260088261323c565b905061176e8382611c82565b60a083015261177e60208261323c565b905061178a8382611c82565b60c083015261179a60208261323c565b905060006117a88483611b10565b61ffff1690506117b960028361323c565b91506117c6848383612037565b60e08401526117d5818361323c565b9150835182146118205760405162461bcd60e51b81526020600482015260166024820152750d2dcecc2d8d2c840dacae6e6c2ceca40d8cadccee8d60531b6044820152606401610758565b5050919050565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915246611889600a5490565b146118ca5760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21032bb369031b430b4b760791b6044820152606401610758565b60008060006118e96000546001600160a01b03600160381b9091041690565b6001600160a01b031663c0fd8bde866040518263ffffffff1660e01b81526004016119149190612a72565b600060405180830381865afa158015611931573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261195991908101906130d9565b92509250925081819061197f5760405162461bcd60e51b81526004016107589190612a72565b5061198983612146565b6119c75760405162461bcd60e51b815260206004820152600f60248201526e3ab735b737bbb71032b6b4ba3a32b960891b6044820152606401610758565b61014083015160009081526009602052604090205460ff1615611a2c5760405162461bcd60e51b815260206004820152601860248201527f6d65737361676520616c726561647920636f6e73756d656400000000000000006044820152606401610758565b611a508361014001516000908152600960205260409020805460ff19166001179055565b50909392505050565b600080611a67866004611ce0565b90506000611a76876008611ce0565b90506000611a8588600c611fda565b90508263ffffffff168763ffffffff16148015611aad57508163ffffffff168663ffffffff16145b8015611aca5750806001600160401b0316856001600160401b0316145b98975050505050505050565b6060600080611ae5858561133d565b91509150611b08826000908152600960205260409020805460ff19166001179055565b949350505050565b6000611b1d82600261323c565b83511015611b645760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606401610758565b50016002015190565b6000611b7a82600161323c565b83511015611bc05760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610758565b50016001015190565b600080611bd783600c61323c565b9050825b81811015611c3757611bed8582611b6d565b60ff1615611c2f5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b6044820152606401610758565b600101611bdb565b50611b08848261217d565b611c4b816121e2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000611c8f82602061323c565b83511015611cd75760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610758565b50016020015190565b6000611ced82600461323c565b83511015611d345760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606401610758565b50016004015190565b60008060008511611d855760405162461bcd60e51b81526020600482015260126024820152710616d6f756e74206d757374206265203e20360741b6044820152606401610758565b82611dcb5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081b5a5b9d081c9958da5c1a595b9d60521b6044820152606401610758565b611dd486610611565b611e155760405162461bcd60e51b81526020600482015260126024820152711d1bdad95b881b9bdd081858d8d95c1d195960721b6044820152606401610758565b61ffff8416600090815260066020526040902054611e755760405162461bcd60e51b815260206004820152601e60248201527f74617267657420636f6e7472616374206e6f74207265676973746572656400006044820152606401610758565b611e7f8686612290565b90506000611e956002546001600160a01b031690565b9050611ea2878284612410565b806001600160a01b031663f856ddb683611ed28861ffff1660009081526007602052604090205463ffffffff1690565b878b611eee8b61ffff1660009081526006602052604090205490565b6040516001600160e01b031960e088901b168152600481019590955263ffffffff93909316602485015260448401919091526001600160a01b03166064830152608482015260a4016020604051808303816000875af1158015611f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f799190612f8d565b92505094509492505050565b6000611f9282602061323c565b83511015611cd75760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610758565b6000611fe782600861323c565b8351101561202e5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606401610758565b50016008015190565b60608161204581601f61323c565b10156120845760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610758565b61208e828461323c565b845110156120d25760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610758565b6060821580156120f1576040519150600082526020820160405261213b565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561212a578051835260209283019201612112565b5050858452601f01601f1916604052505b5090505b9392505050565b6000816080015161216b836060015161ffff1660009081526006602052604090205490565b1480156110b957505060800151151590565b600061218a82601461323c565b835110156121d25760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610758565b500160200151600160601b900490565b6001600160a01b0381163b61224f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610758565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b179052905160009182916001600160a01b038616916122e491612f17565b600060405180830381855afa9150503d806000811461231f576040519150601f19603f3d011682016040523d82523d6000602084013e612324565b606091505b5091505060008180602001905181019061233e9190612dc7565b905061234c8533308761255d565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17905290516000916001600160a01b0388169161239f9190612f17565b600060405180830381855afa9150503d80600081146123da576040519150601f19603f3d011682016040523d82523d6000602084013e6123df565b606091505b509150506000818060200190518101906123f99190612dc7565b9050612405838261324f565b979650505050505050565b80158061248a5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124889190612dc7565b155b6124f55760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610758565b6040516001600160a01b03831660248201526044810182905261255890849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261259b565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526125959085906323b872dd60e01b90608401612521565b50505050565b60006125f0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661266d9092919063ffffffff16565b805190915015612558578080602001905181019061260e9190612e8d565b6125585760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610758565b6060611b088484600085856001600160a01b0385163b6126cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610758565b600080866001600160a01b031685876040516126eb9190612f17565b60006040518083038185875af1925050503d8060008114612728576040519150601f19603f3d011682016040523d82523d6000602084013e61272d565b606091505b50915091506124058282866060831561274757508161213f565b8251156127575782518084602001fd5b8160405162461bcd60e51b81526004016107589190612a72565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082019290925260e081019190915290565b61ffff811681146127c757600080fd5b50565b6000602082840312156127dc57600080fd5b813561213f816127b7565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612820576128206127e7565b60405290565b604051608081016001600160401b0381118282101715612820576128206127e7565b60405161016081016001600160401b0381118282101715612820576128206127e7565b604051601f8201601f191681016001600160401b0381118282101715612893576128936127e7565b604052919050565b63ffffffff811681146127c757600080fd5b80356128b88161289b565b919050565b6001600160401b03811681146127c757600080fd5b80356128b8816128bd565b60006001600160401b038211156128f6576128f66127e7565b50601f01601f191660200190565b600082601f83011261291557600080fd5b8135612928612923826128dd565b61286b565b81815284602083860101111561293d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561296c57600080fd5b81356001600160401b038082111561298357600080fd5b90830190610100828603121561299857600080fd5b6129a06127fd565b82358152602083013560208201526129ba604084016128ad565b60408201526129cb606084016128ad565b60608201526129dc608084016128d2565b608082015260a083013560a082015260c083013560c082015260e083013582811115612a0757600080fd5b612a1387828601612904565b60e08301525095945050505050565b60005b83811015612a3d578181015183820152602001612a25565b50506000910152565b60008151808452612a5e816020860160208601612a22565b601f01601f19169290920160200192915050565b6020815260006110b66020830184612a46565b6001600160a01b03811681146127c757600080fd5b600060208284031215612aac57600080fd5b813561213f81612a85565b600060208284031215612ac957600080fd5b5035919050565b600060208284031215612ae257600080fd5b81356001600160401b03811115612af857600080fd5b82016060818503121561213f57600080fd5b6020815281516020820152602082015160408201526000604083015163ffffffff808216606085015280606086015116608085015250506080830151612b5b60a08401826001600160401b03169052565b5060a083015160c083015260c083015160e083015260e0830151610100808185015250611b08610120840182612a46565b600060208284031215612b9e57600080fd5b81356001600160401b03811115612bb457600080fd5b611b0884828501612904565b600060208284031215612bd257600080fd5b813561213f8161289b565b60008060408385031215612bf057600080fd5b8235612bfb8161289b565b946020939093013593505050565b600080600083850360c0811215612c1f57600080fd5b6080811215612c2d57600080fd5b50612c36612826565b8435612c4181612a85565b8152602085810135908201526040850135612c5b816127b7565b60408201526060858101359082015292506080840135612c7a8161289b565b915060a08401356001600160401b03811115612c9557600080fd5b612ca186828701612904565b9150509250925092565b60ff811681146127c757600080fd5b60008060408385031215612ccd57600080fd5b82356001600160401b03811115612ce357600080fd5b612cef85828601612904565b9250506020830135612d0081612cab565b809150509250929050565b828152604060208201526000611b086040830184612a46565b60008151612d36818560208601612a22565b9290920192915050565b60ff60f81b8b60f81b168152896001820152886021820152600063ffffffff60e01b808a60e01b166041840152808960e01b166045840152506001600160401b0360c01b8760c01b16604983015285605183015284607183015261ffff60f01b8460f01b166091830152612db76093830184612d24565b9c9b505050505050505050505050565b600060208284031215612dd957600080fd5b5051919050565b6000808335601e19843603018112612df757600080fd5b8301803591506001600160401b03821115612e1157600080fd5b602001915036819003821315612e2657600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000612e6a604083018688612e2d565b8281036020840152612405818587612e2d565b805180151581146128b857600080fd5b600060208284031215612e9f57600080fd5b6110b682612e7d565b60208082526021908201527f696e76616c696420676f7665726e616e6365207061796c6f6164206c656e67746040820152600d60fb1b606082015260800190565b60208082526014908201527334b73b30b634b2103a30b933b2ba1031b430b4b760611b604082015260600190565b60008251612f29818460208701612a22565b9190910192915050565b600060208284031215612f4557600080fd5b815161213f81612a85565b63ffffffff84168152606060208201526000612f6f6060830185612a46565b905060ff83166040830152949350505050565b80516128b8816128bd565b600060208284031215612f9f57600080fd5b815161213f816128bd565b80516128b881612cab565b80516128b88161289b565b80516128b8816127b7565b600082601f830112612fdc57600080fd5b8151612fea612923826128dd565b818152846020838601011115612fff57600080fd5b611b08826020830160208701612a22565b600082601f83011261302157600080fd5b815160206001600160401b0382111561303c5761303c6127e7565b61304a818360051b0161286b565b82815260079290921b8401810191818101908684111561306957600080fd5b8286015b848110156130ce57608081890312156130865760008081fd5b61308e612826565b8151815284820151858201526040808301516130a981612cab565b908201526060828101516130bc81612cab565b9082015283529183019160800161306d565b509695505050505050565b6000806000606084860312156130ee57600080fd5b83516001600160401b038082111561310557600080fd5b90850190610160828803121561311a57600080fd5b613122612848565b61312b83612faa565b815261313960208401612fb5565b602082015261314a60408401612fb5565b604082015261315b60608401612fc0565b60608201526080830151608082015261317660a08401612f82565b60a082015261318760c08401612faa565b60c082015260e08301518281111561319e57600080fd5b6131aa89828601612fcb565b60e0830152506101006131be818501612fb5565b9082015261012083810151838111156131d657600080fd5b6131e28a828701613010565b91830191909152506101408381015190820152945061320360208701612e7d565b9350604086015191508082111561321957600080fd5b50612ca186828701612fcb565b634e487b7160e01b600052601160045260246000fd5b808201808211156110b9576110b9613226565b818103818111156110b9576110b961322656fea2646970667358221220f8371a57091bc6a480ba35b29bbdb8fcfdf3c96be8291c22b2fb6090efb28a6364736f6c63430008130033';

type CircleIntegrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircleIntegrationConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircleIntegration__factory extends ContractFactory {
  constructor(...args: CircleIntegrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<CircleIntegration> {
    return super.deploy(overrides || {}) as Promise<CircleIntegration>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CircleIntegration {
    return super.attach(address) as CircleIntegration;
  }
  override connect(signer: Signer): CircleIntegration__factory {
    return super.connect(signer) as CircleIntegration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleIntegrationInterface {
    return new utils.Interface(_abi) as CircleIntegrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CircleIntegration {
    return new Contract(address, _abi, signerOrProvider) as CircleIntegration;
  }
}
