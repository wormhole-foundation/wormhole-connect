/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from './common';
import type { CircleRelayer, CircleRelayerInterface } from './CircleRelayer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'circleIntegration_',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'nativeTokenDecimals_',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'feeRecipient_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'ownerAssistant_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldRecipient',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newRecipient',
        type: 'address',
      },
    ],
    name: 'FeeRecipientUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransfered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'relayer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nativeAmount',
        type: 'uint256',
      },
    ],
    name: 'SwapExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'swapRate',
        type: 'uint256',
      },
    ],
    name: 'SwapRateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'address_',
        type: 'bytes32',
      },
    ],
    name: 'bytes32ToAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'calculateMaxSwapAmountIn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'maxAllowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'toNativeAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateNativeSwapAmountOut',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nativeAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
    ],
    name: 'cancelOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'circleIntegration',
    outputs: [
      {
        internalType: 'contract ICircleIntegration',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'confirmOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'encoded',
        type: 'bytes',
      },
    ],
    name: 'decodeTransferTokensWithRelay',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'payloadId',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'targetRelayerFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'toNativeTokenAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'targetRecipientWallet',
            type: 'bytes32',
          },
        ],
        internalType: 'struct CircleRelayerStructs.TransferTokensWithRelay',
        name: 'transfer',
        type: 'tuple',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'payloadId',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'targetRelayerFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'toNativeTokenAmount',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'targetRecipientWallet',
            type: 'bytes32',
          },
        ],
        internalType: 'struct CircleRelayerStructs.TransferTokensWithRelay',
        name: 'transfer',
        type: 'tuple',
      },
    ],
    name: 'encodeTransferTokensWithRelay',
    outputs: [
      {
        internalType: 'bytes',
        name: 'encoded',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeRecipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPaused',
    outputs: [
      {
        internalType: 'bool',
        name: 'paused',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'emitterChainId',
        type: 'uint16',
      },
    ],
    name: 'getRegisteredContract',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'maxNativeSwapAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'nativeSwapRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeSwapRatePrecision',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeTokenDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ownerAssistant',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'encodedWormholeMessage',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'circleBridgeMessage',
            type: 'bytes',
          },
          {
            internalType: 'bytes',
            name: 'circleAttestation',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICircleIntegration.RedeemParameters',
        name: 'redeemParams',
        type: 'tuple',
      },
    ],
    name: 'redeemTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'contractAddress',
        type: 'bytes32',
      },
    ],
    name: 'registerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'relayerFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'bool',
        name: 'paused',
        type: 'bool',
      },
    ],
    name: 'setPauseForTransfers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'submitOwnershipTransferRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'toNativeTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint16',
        name: 'targetChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'targetRecipientWallet',
        type: 'bytes32',
      },
    ],
    name: 'transferTokensWithRelay',
    outputs: [
      {
        internalType: 'uint64',
        name: 'messageSequence',
        type: 'uint64',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'newFeeRecipient',
        type: 'address',
      },
    ],
    name: 'updateFeeRecipient',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
    ],
    name: 'updateMaxNativeSwapAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'swapRate',
        type: 'uint256',
      },
    ],
    name: 'updateNativeSwapRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'nativeSwapRatePrecision_',
        type: 'uint256',
      },
    ],
    name: 'updateNativeSwapRatePrecision',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'newAssistant',
        type: 'address',
      },
    ],
    name: 'updateOwnerAssistant',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chainId_',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'updateRelayerFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormhole',
    outputs: [
      {
        internalType: 'contract IWormhole',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080604090808252346200034a5760808162002ba380380380916200002582856200034f565b8339810103126200034a576200003b8162000389565b6020808301519260ff84168085036200034a576200006960606200006188850162000389565b930162000389565b6001600b556001600160a01b03949092908516918215620002fb5715620002b7578416918215620002735784169081156200022f57600092835490640100000000600160c01b0333871b169362ff000060018060a01b031999858b600554161760055560101b1691828663ff010000600160c01b0319861617178755896003541617600355886002541617600255885193634d4502c960e11b85528685600481875afa94851562000225579087949392918796620001d5575b5061ffff600496169263ff000001600160c01b03191617171784558751928380926384acd1bb60e01b82525afa928315620001cb57829362000182575b505050169060045416176004556305f5e1006006555161280490816200039f8239f35b9080929350813d8311620001c3575b6200019d81836200034f565b81010312620001bf5751908282168203620001bc57503880806200015f565b80fd5b5080fd5b503d62000191565b86513d84823e3d90fd5b8092949650859193953d83116200021d575b620001f381836200034f565b8101031262000219575161ffff8116810362000219579386939092909161ffff62000122565b8580fd5b503d620001e7565b8a513d88823e3d90fd5b865162461bcd60e51b815260048101859052601760248201527f696e76616c6964206f776e657220617373697374616e740000000000000000006044820152606490fd5b865162461bcd60e51b815260048101859052601d60248201527f696e76616c69642066656520726563697069656e7420616464726573730000006044820152606490fd5b865162461bcd60e51b815260048101859052601760248201527f696e76616c6964206e617469766520646563696d616c730000000000000000006044820152606490fd5b875162461bcd60e51b815260048101869052602260248201527f696e76616c696420636972636c6520696e746567726174696f6e206164647265604482015261737360f01b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200037357604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200034a5756fe60806040526004361015610013575b600080fd5b60003560e01c8063038c0b66146102a7578063086049851461029e5780630a55d735146102955780630e1c863e1461028c57806313d8900b1461028357806316fb440a1461027a5780631a28219514610271578063203c5095146102685780632a88b4251461025f5780632efe4f421461025657806332d9965a1461024d5780633d62cca014610244578063469048401461023b57806351e2d7b51461023257806359b87d8e146102295780635ced058e146102205780636805b84b1461021757806368aa9ef41461020e5780636ddbaff31461020557806384acd1bb146101fc5780638da5cb5b146101f35780638e151dd1146101ea57806394cc743d146101e15780639a8a0592146101d8578063a2f32c8f146101cf578063ad48cb5e146101c6578063b5419523146101bd578063cd601c78146101b4578063dd6522aa146101ab578063e30c3978146101a2578063ea1d2e4a14610199578063ffa1ad74146101905763fff982a81461018857600080fd5b61000e6112d3565b5061000e61128c565b5061000e6111e6565b5061000e6111bc565b5061000e611192565b5061000e61116a565b5061000e61112c565b5061000e611107565b5061000e6110b8565b5061000e611095565b5061000e610ffc565b5061000e610fc8565b5061000e610f9e565b5061000e610f74565b5061000e610f11565b5061000e610e94565b5061000e610e6d565b5061000e610e45565b5061000e610bc6565b5061000e610aec565b5061000e610ac2565b5061000e610a88565b5061000e610a69565b5061000e610a2b565b5061000e610943565b5061000e61086b565b5061000e6107f8565b5061000e6107a9565b5061000e6106d3565b5061000e6104a1565b5061000e61042a565b5061000e610392565b503461000e57600080600319360112610383576001546001600160a01b03908116903382900361033e57825460201c6001600160a01b031660008054640100000000600160c01b031916602085901b640100000000600160c01b0316179055600180546001600160a01b0319169055167f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee678380a380f35b60405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206d7573742062652070656e64696e674f776e657200000000006044820152606490fd5b80fd5b61ffff81160361000e57565b503461000e57604036600319011261000e576004356103b081610386565b600054602435916103e291906103d4602083901c6001600160a01b031633146122df565b61ffff809116911614612322565b80156103ed57600655005b60405162461bcd60e51b81526020600482015260156024820152740707265636973696f6e206d757374206265203e203605c1b6044820152606490fd5b5060031960203682011261000e57600435906001600160401b03821161000e57606090823603011261000e5761046290600401611b82565b005b6001600160a01b0381160361000e57565b606090600319011261000e5760043561048d81610386565b9060243561049a81610464565b9060443590565b503461000e576104626104b336610475565b916104e96000546104da60018060a01b0333818460201c16149081156105d6575b506123b8565b61ffff8381169116141561240e565b61050c6105048261ffff16600052600a602052604060002090565b54151561244a565b6005546105729061053390610527906001600160a01b031681565b6001600160a01b031690565b604051633b6e750f60e01b81526001600160a01b038516600482015290602090829060249082905afa9081156105c9575b60009161059b575b5061248f565b61ffff1660009081526007602090815260408083206001600160a01b0390941683529290522055565b6105bc915060203d81116105c2575b6105b48183610659565b8101906116ee565b3861056c565b503d6105aa565b6105d161157b565b610564565b6002541633149050386104d4565b50634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761061657604052565b61061e6105e4565b604052565b604081019081106001600160401b0382111761061657604052565b60a081019081106001600160401b0382111761061657604052565b90601f801991011681019081106001600160401b0382111761061657604052565b60405190610687826105fb565b565b6040519061010082018281106001600160401b0382111761061657604052565b6020906001600160401b0381116106c6575b601f01601f19160190565b6106ce6105e4565b6106bb565b503461000e57602036600319011261000e576004356001600160401b03811161000e573660238201121561000e57806004013590610710826106a9565b61071d6040519182610659565b828152366024848401011161000e57600060208461077d9560246107499601838601378301015261265d565b60405191829182919091606080608083019460ff815116845260208101516020850152604081015160408501520151910152565b0390f35b604090600319011261000e5760043561079981610386565b906024356107a681610464565b90565b503461000e5760206107e561ffff6107c036610781565b91166000526007835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b8015150361000e57565b503461000e57604036600319011261000e5760043561081681610386565b63ff000000602435610827816107ee565b6000549261085590610847602086901c6001600160a01b031633146122df565b61ffff858116911614612322565b63ff0000001990921691151560181b1617600055005b503461000e5761087a36610781565b60005490916001600160a01b039161089d916103d4602083901c851633146122df565b8082169182156108ee57600380546001600160a01b031981166001600160a01b039384161790915516167faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3600080a3005b60405162461bcd60e51b815260206004820152602760248201527f6e6577466565526563697069656e742063616e6e6f7420657175616c206164646044820152667265737328302960c81b6064820152608490fd5b503461000e5761095236610475565b909160009261097c845460018060a01b039333858360201c16148015610a1e575b6103d4906123b8565b600554604051633b6e750f60e01b81526001600160a01b0383811660048301526109c392602091839160249183918916165afa908115610a11575b869161059b575061248f565b6109ce8315156124d0565b6001600160a01b0381166000908152600860205260409020839055167fc6eb9fb936b61b402d503deeffc822f46492e15c2c8f079815cc4850ad7b02b08380a380f35b610a1961157b565b6109b7565b5060025485163314610973565b503461000e57602036600319011261000e57600435610a4981610464565b60018060a01b031660005260096020526020604060002054604051908152f35b503461000e57600036600319011261000e576020600654604051908152f35b503461000e57602036600319011261000e5761ffff600435610aa981610386565b16600052600a6020526020604060002054604051908152f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e57604036600319011261000e57600435610b0a81610386565b6000549060243590610b2a602084901c6001600160a01b031633146122df565b8115610b7157610b506104629361ffff808416908115159283610b64575b50505061235c565b61ffff16600052600a602052604060002055565b1614159050388080610b48565b60405162461bcd60e51b815260206004820152602760248201527f636f6e7472616374416464726573732063616e6e6f7420657175616c206279746044820152666573333228302960c81b6064820152608490fd5b5060a036600319011261000e57600435610bdf81610464565b6024359060443560643591610bf383610386565b608435926002600b5414610e00576002600b5560ff60005460181c16610dc757610c1e85151561135f565b610c298415156113a0565b6001600160a01b038281169590610c418715156113ec565b610c598361ffff16600052600a602052604060002090565b549382610c67861515611438565b610c709161219e565b9587610c8a8561ffff166000526007602052604060002090565b6001600160a01b039091166000908152602091909152604090205495610cb081886114a9565b8811610cbb906114be565b610cc361067a565b6001815296602088015260408701526060860152600554166001600160a01b03166001600160a01b031694610cf9908688611602565b610d0161067a565b6001600160a01b039096168652602086015261ffff1660408501526060840152610d2a9061251c565b6040516328a87c1360e21b81529283918291610d4a919060048401611532565b03815a602094600091f161077d918115610dba575b600091610d8c575b50610d726001600b55565b6040516001600160401b0390911681529081906020820190565b610dad915060203d8111610db3575b610da58183610659565b81019061151e565b38610d67565b503d610d9b565b610dc261157b565b610d5f565b60405162461bcd60e51b81526020600482015260116024820152701c995b185e595c881a5cc81c185d5cd959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461000e57602036600319011261000e576040516004356001600160a01b03168152602090f35b503461000e57600036600319011261000e57602060ff60005460181c166040519015158152f35b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b60ff81160361000e57565b60005b838110610edc5750506000910152565b8181015183820152602001610ecc565b90602091610f0581518092818552858086019101610ec9565b601f01601f1916010190565b503461000e57608036600319011261000e5761077d610f60604051610f35816105fb565b600435610f4181610ebe565b815260243560208201526044356040820152606435606082015261251c565b604051918291602083526020830190610eec565b503461000e57600036600319011261000e576004546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e57600054604051602091821c6001600160a01b03168152f35b503461000e57604036600319011261000e576020610ff4600435610feb81610464565b602435906120cb565b604051908152f35b503461000e5761100b36610781565b6000546001600160a01b039261102d91906103d4602083901c861633146122df565b168015611051576bffffffffffffffffffffffff60a01b6001541617600155600080f35b606460405162461bcd60e51b815260206004820152602060248201527f6e65774f776e65722063616e6e6f7420657175616c20616464726573732830296044820152fd5b503461000e57600036600319011261000e57602061ffff60005416604051908152f35b503461000e57602036600319011261000e576110f56004356110d981610386565b600054906103d4602083901c6001600160a01b031633146122df565b600180546001600160a01b0319169055005b503461000e57600036600319011261000e57602060ff60005460101c16604051908152f35b503461000e57602036600319011261000e5760043561114a81610464565b60018060a01b031660005260086020526020604060002054604051908152f35b503461000e57602036600319011261000e576020610ff460043561118d81610464565b611f9b565b503461000e57600036600319011261000e576005546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576001546040516001600160a01b039091168152602090f35b503461000e576111f536610781565b6000546001600160a01b039261121791906103d4602083901c861633146122df565b16801561123b576bffffffffffffffffffffffff60a01b6002541617600255600080f35b60405162461bcd60e51b8152602060048201526024808201527f6e6577417373697374616e742063616e6e6f7420657175616c206164647265736044820152637328302960e01b6064820152608490fd5b503461000e57600036600319011261000e5761077d6040516112ad81610623565b60058152640302e322e360dc1b6020820152604051918291602083526020830190610eec565b503461000e576104626113456112e836610475565b600054909391926001600160a01b039161130d916103d4602083901c851633146122df565b6020816005541691602460405180948193633b6e750f60e01b8352881660048301525afa9081156105c95760009161059b575061248f565b6001600160a01b0316600090815260096020526040902055565b1561136657565b60405162461bcd60e51b81526020600482015260126024820152710616d6f756e74206d757374206265203e20360741b6044820152606490fd5b156113a757565b60405162461bcd60e51b815260206004820152601860248201527f696e76616c69642074617267657420726563697069656e7400000000000000006044820152606490fd5b156113f357565b60405162461bcd60e51b815260206004820152601d60248201527f746f6b656e2063616e6e6f7420657175616c20616464726573732830290000006044820152606490fd5b1561143f57565b60405162461bcd60e51b815260206004820152602560248201527f434952434c452d52454c415945523a20746172676574206e6f742072656769736044820152641d195c995960da1b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b919082018092116114b657565b610687611492565b156114c557565b60405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e7420616d6f756e74526563656976656400000000006044820152606490fd5b51906001600160401b038216820361000e57565b9081602091031261000e576107a69061150a565b60c09060606107a6949360018060a01b0381511683526020810151602084015261ffff604082015116604084015201516060820152600060808201528160a08201520190610eec565b506040513d6000823e3d90fd5b9081602091031261000e575190565b1561159e57565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b61165861068793928315801561165d575b61161c90611597565b60405163095ea7b360e01b60208201526001600160a01b039091166024820152604481019390935282606481015b03601f198101845283610659565b611762565b50604051636eb1769f60e11b81523060048201526001600160a01b038216602482015261161c90602081806044810103816001600160a01b0389165afa9081156116e1575b6000916116b3575b50159050611613565b6116d4915060203d81116116da575b6116cc8183610659565b810190611588565b386116aa565b503d6116c2565b6116e961157b565b6116a2565b9081602091031261000e57516107a6816107ee565b1561170a57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6040516001600160a01b03919091169161177b82610623565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b156117f257600082819282876117cd9796519301915af16117c7611837565b90611867565b805190816117da57505050565b82610687936117ed9383010191016116ee565b611703565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b3d15611862573d90611848826106a9565b916118566040519384610659565b82523d6000602084013e565b606090565b90919015611873575090565b8151156118835750805190602001fd5b60405162461bcd60e51b8152602060048201529081906118a7906024830190610eec565b0390fd5b519063ffffffff8216820361000e57565b81601f8201121561000e5780516118d2816106a9565b926118e06040519485610659565b8184526020828401011161000e576107a69160208085019101610ec9565b9060208282031261000e5781516001600160401b039283821161000e5701906101008282031261000e57611930610689565b92825184526020830151602085015261194b604084016118ab565b604085015261195c606084016118ab565b606085015261196d6080840161150a565b608085015260a083015160a085015260c083015160c085015260e083015190811161000e5761199c92016118bc565b60e082015290565b9035601e198236030181121561000e5701602081359101916001600160401b03821161000e57813603831361000e57565b908060209392818452848401376000828201840152601f01601f1916010190565b9060606107a69260208152611a1e611a0e84806119a4565b84602085015260808401916119d5565b90611a51611a46611a3260208701876119a4565b601f198587038101604087015295916119d5565b9460408101906119a4565b939092828603019101526119d5565b9081602091031261000e57516107a681610386565b15611a7c57565b60405162461bcd60e51b815260206004820152602860248201527f66726f6d41646472657373206973206e6f74206120726567697374657265642060448201526718dbdb9d1c9858dd60c21b6064820152608490fd5b15611ad957565b60405162461bcd60e51b815260206004820152602360248201527f726563697069656e742063616e6e6f742073776170206e61746976652061737360448201526265747360e81b6064820152608490fd5b15611b3157565b606460405162461bcd60e51b815260206004820152602060248201527f696e73756666696369656e74206e617469766520617373657420616d6f756e746044820152fd5b919082039182116114b657565b600554611bbc906001600160a01b0390611b9d908216610527565b90604051936357bf927b60e01b855284806000958693600483016119f6565b038183865af1938415611e9a575b8394611e76575b50611c2c611c5b611be560e087015161265d565b93611c5460a088015191611c0060408a015163ffffffff1690565b6040518092638cf67ba960e01b825281806020998a956004830191909163ffffffff6020820193169052565b03915afa908115611e69575b8891611e3c575b5061ffff16600052600a602052604060002090565b5414611a75565b8451611c6f906001600160a01b0316610527565b60608401519094906001600160a01b03169383851691823314611e225761068797928483611cb5938a6040611cc3999701948551611ce0575b50505001519051906114a9565b9182611cca575b0151611b75565b9216611ea7565b611cdb838660035416878a16611ea7565b611cbc565b611ce982611f9b565b80875111611e1a575b50611cfe8651836120cb565b92831580611dce57828291611d1587341015611b2a565b82611d208834611b75565b8015908115611d9a575b5050879091611d90575b83928392f115611d83575b8551604080519182526020820194909452918b169233927f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f19190a45b388a81611ca8565b611d8b61157b565b611d3f565b6108fc9150611d34565b8280929181928290611dc5575b3390f115611db8575b823880611d2a565b611dc061157b565b611db0565b506108fc611da7565b509250505080845234158015611de6575b5050611d7b565b81908190611e11575b81809134903390f115611e04575b3880611ddf565b611e0c61157b565b611dfd565b506108fc611def565b865238611cf2565b50505061068794611e333415611ad2565b01519216611ea7565b611e5c9150853d8711611e62575b611e548183610659565b810190611a60565b38611c3f565b503d611e4a565b611e7161157b565b611c38565b611e939194503d8085833e611e8b8183610659565b8101906118fe565b9238611bd1565b611ea261157b565b611bca565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604482019290925261068791611658826064810161164a565b15611ee757565b60405162461bcd60e51b81526020600482015260116024820152701cddd85c081c985d19481b9bdd081cd95d607a1b6044820152606490fd5b9081602091031261000e57516107a681610ebe565b818102929181159184041417156114b657565b9060ff8091169116039060ff82116114b657565b60ff16604d8111611f6e575b600a0a90565b611f76611492565b611f68565b8115611f85570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b031660008181526008602052604090205490611fbf821515611ee0565b60405163313ce56760e01b815291602083600481855afa9283156120be575b60009361208e575b5060ff60005460101c16918260ff85161160001461204c57612038612043936120326107a6969461202c61203d9560018060a01b03166000526009602052604060002090565b54611f35565b93611f48565b611f5c565b90611f35565b60065490611f7b565b6120386107a6946120796120889461202c61207f9560018060a01b03166000526009602052604060002090565b94611f48565b60065490611f35565b90611f7b565b6120b091935060203d81116120b7575b6120a88183610659565b810190611f20565b9138611fe6565b503d61209e565b6120c661157b565b611fde565b6001600160a01b03166000818152600860209081526040909120600492919054916120f7831515611ee0565b60405163313ce56760e01b815293849182905afa918215612191575b600092612171575b5060ff60005460101c168060ff841611600014612152579061203d6120386120889361214c6107a697600654611f35565b95611f48565b61203d61203861216c93946120326107a697600654611f35565b611f7b565b61218a91925060203d81116120b7576120a88183610659565b903861211b565b61219961157b565b612113565b6040516370a0823160e01b8082523060048301526107a69391926020926001600160a01b0390911691908385602481865afa94851561226d575b600095612246575b50906121ef849230338661227a565b60405190815230600482015291829060249082905afa918215612239575b60009261221c575b5050611b75565b6122329250803d106116da576116cc8183610659565b3880612215565b61224161157b565b61220d565b84929195506122646121ef91843d86116116da576116cc8183610659565b959192506121e0565b61227561157b565b6121d8565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526106879160a082018281106001600160401b038211176122d2575b604052611762565b6122da6105e4565b6122ca565b156122e657565b60405162461bcd60e51b815260206004820152601460248201527331b0b63632b9103737ba103a34329037bbb732b960611b6044820152606490fd5b1561232957565b60405162461bcd60e51b815260206004820152600b60248201526a3bb937b7339031b430b4b760a91b6044820152606490fd5b1561236357565b60405162461bcd60e51b815260206004820152602760248201527f636861696e49645f2063616e6e6f7420657175616c2030206f7220746869732060448201526618da185a5b925960ca1b6064820152608490fd5b156123bf57565b60405162461bcd60e51b815260206004820152602160248201527f63616c6c6572206e6f7420746865206f776e6572206f7220617373697374616e6044820152601d60fa1b6064820152608490fd5b1561241557565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21031b430b4b760991b6044820152606490fd5b1561245157565b60405162461bcd60e51b815260206004820152601660248201527518dbdb9d1c9858dd08191bd95cdb89dd08195e1a5cdd60521b6044820152606490fd5b1561249657565b60405162461bcd60e51b81526020600482015260126024820152711d1bdad95b881b9bdd081858d8d95c1d195960721b6044820152606490fd5b156124d757565b60405162461bcd60e51b815260206004820152601960248201527f737761702072617465206d757374206265206e6f6e7a65726f000000000000006044820152606490fd5b600160ff8251160361256b5780519060208101519060606040820151910151916040519360ff60f81b9060f81b166020850152602184015260418301526061820152606181526107a68161063e565b60405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c185e5b1bd8591259607a1b6044820152606490fd5b156125ab57565b60405162461bcd60e51b815260206004820152602960248201527f434952434c455f52454c415945523a20696e76616c6964206d657373616765206044820152681c185e5b1bd859125960ba1b6064820152608490fd5b1561260957565b60405162461bcd60e51b815260206004820152602660248201527f434952434c455f52454c415945523a20696e76616c6964206d657373616765206044820152650d8cadccee8d60d31b6064820152608490fd5b9060405161266a816105fb565b600081526020810192600084526040820160008152606083019060008252839560018451106126e9576126bf600160ff6126b8610687986126b1848a0151829060ff169052565b5160ff1690565b16146125a4565b6126c884612724565b90526126d383612771565b90526126de82612781565b905251606114612602565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b6021815110612734576021015190565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b6041815110612734576041015190565b6061815110612791576061015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fdfea2646970667358221220e7d513599373630929820c5fea84f64fc6c5f7b66d2bab71dbef92ceed0013b364736f6c63430008110033';

type CircleRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircleRelayerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircleRelayer__factory extends ContractFactory {
  constructor(...args: CircleRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    circleIntegration_: PromiseOrValue<string>,
    nativeTokenDecimals_: PromiseOrValue<BigNumberish>,
    feeRecipient_: PromiseOrValue<string>,
    ownerAssistant_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<CircleRelayer> {
    return super.deploy(
      circleIntegration_,
      nativeTokenDecimals_,
      feeRecipient_,
      ownerAssistant_,
      overrides || {},
    ) as Promise<CircleRelayer>;
  }
  override getDeployTransaction(
    circleIntegration_: PromiseOrValue<string>,
    nativeTokenDecimals_: PromiseOrValue<BigNumberish>,
    feeRecipient_: PromiseOrValue<string>,
    ownerAssistant_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      circleIntegration_,
      nativeTokenDecimals_,
      feeRecipient_,
      ownerAssistant_,
      overrides || {},
    );
  }
  override attach(address: string): CircleRelayer {
    return super.attach(address) as CircleRelayer;
  }
  override connect(signer: Signer): CircleRelayer__factory {
    return super.connect(signer) as CircleRelayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleRelayerInterface {
    return new utils.Interface(_abi) as CircleRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CircleRelayer {
    return new Contract(address, _abi, signerOrProvider) as CircleRelayer;
  }
}
